////
/// Mixins definition
///
////

///
/// unstyle link elements
///
@mixin unstyled-link {
  color: inherit;
  text-decoration: inherit;
  cursor: inherit;
  &:active, &:focus {
    outline: none;
  }
}


/// includes z-index value through its layer name
/// @access public
/// @param {String} $layer - layer name
/// @return {Number}
/// @require $z-indexes
@mixin z($layer: default) {
  z-index: read-map($z-indexes, $layer);
}

/// includes opacity levels though its map
/// @access public
/// @param {String} $layer - layer name
/// @return {String}
/// @require $opacity-levels
@mixin opacity($layer) {
  opacity: read-map($opacity-levels, $layer);
}

///
/// fill the full component relative to its parent
///
@mixin fill-content {
  height: 100%;
  width: 100%;
}

///
/// Applies font awesome icon object to a element
/// @access public
/// @param {String} $icon - icon id to be loaded
///
@mixin font-awesome($icon) {
  content: $icon;
  font-family: "Font Awesome 5 Free";
  display: inline-block;
  font-weight: 900;
}

///
/// Resets all style for select html element
///
///
@mixin select-reset {
  select {
    text-decoration: none;
    border: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }

  select::-ms-expand {
    display: none;
  }
}

///
/// Configures the app to accept vertical rhythm framework
///
/// @access public
/// @requires $font-family
///
@mixin type-setting() {

  html, body {
    @include type-rhythm;
  }

  body {
    font-family: $font-family;
  }

  *, *:after, *:before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
  }

  @include select-reset;
}
