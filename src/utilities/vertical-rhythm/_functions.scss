@charset 'utf-8';

///
// This file defines functions used for vertical rhythm
///

@use 'sass:math';
@use "sass:list";
@use 'variables' as *;

///
/// Calculates the according lines length
///
///   The lines is based on ratio defined by the user. The vertical rhythm
/// library defines a root html element which is where all font-size and line
/// is referenced by. So the calculation is converted to rem so can use
/// this font-size of root as reference
///
/// @requires $baseline
///
/// @throw For length units
/// @param {Number} $lines [1] - lines to be calculated
/// @return {Number} - tamanho da linha em rem
///
@function baseline-scale($lines: 1) {
  @if not is-unitless($lines) {
    @error "baseline scale must be a unitless value. Instead it were #{$lines}";
  }

  @return $lines * $baseline;
}

///
/// Calculates the specific leading for size.
///
/// @requires {function} _lines-required
/// @requires {function} baseline-scale
/// @requires {Number} $basesize
///
/// @param {Number} $font-size [$basesize] $font-size
/// @return {Number}
///
@function leading($font-size: $basesize) {
  @return baseline-scale(_lines-required($font-size));
}

///
/// TODO implementar
/// @see https://techterms.com/definition/leading#:~:text=Terms%20%3A%20Leading%20Definition-,Leading,used%20to%20separate%20the%20lines.
///
@function line-spacing() {
  @error 'Not implemented';
}

///
/// Transforms each line using baseline-scale
///
/// @throws property error type
/// @access private
/// @requires {function} baseline-scale
///
/// @param {Number} $lines - arbitrary list of lines
/// @return {List} list of transformed lines
///
@function list-baseline($lines...) {
  $list: ();

  @each $item in $lines {
    @if type-of($item) != "number" {
      @warn "#{$item} must be a number to calculate required lines";
    }

    $list: list.append($list, baseline-scale($item));
  }

  @return $list;
}

///
/// Calculates the amount of lines required to mantain the rhythm for length
///
/// Uses a length value in pixels or rem to calculate the minimium required
/// lines for size
///
/// @access private
/// @throw For unit other than pixel or rem
/// @requires {Function} baseline-scale
/// @param {Number} $size - Length in rem or pixels
/// @return {Number}
///
@function _lines-required($size) {
  @if math.unit($size) == "px" {
    $size: rem($size);
  }

  @if math.unit($size) != "rem" {
    @error 'The unit must be in px or rem. You value is ' + #{$size};
  }

  @return ceil(math.div($size, baseline-scale()));
}
